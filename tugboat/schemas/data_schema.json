{
    "$schema": "http://json-schema.org/schema#",
    "title": "All",
    "description": "All information",
    "type": "object",
    "properties": {
        "ipmi_data": {
            "type": "array",
            "items": [
                {
                    "type": "object",
                    "$ref": "#/definitions/ipmi_data"
                },
                {
                    "type": "array",
                    "items": [
                        {
                        "type": "string",
                        "pattern": "^[a-zA-Z]{3}[0-9]+r[0-9][0-9][oOcC][0-9]{3}$"
                        }
                    ]
                }
            ]
        },
        "network_data": {
            "type": "object",
            "properties": {
                "private": {
                    "type": "object",
                    "$ref": "#/definitions/private_network"
                },
                "public": {
                    "type": "object",
                    "$ref": "#/definitions/public_network"
                },
                "dns_ntp_ldap": {
                    "type": "object",
                    "$ref": "#/definitions/dns_ntp_ldap"
                }
            },
            "required": [
                "private",
                "public",
                "dns_ntp_ldap"
            ]
        },
        "location_data": {
            "type": "object",
            "$ref": "#/definitions/location_data"
        }
    },
    "required": [
        "ipmi_data",
        "network_data",
        "location_data"
    ],
    "definitions": {
        "ipmi_data":{
            "type": "object",
            "patternProperties": {
                "^[a-zA-Z]{3}[0-9]+r[0-9][0-9][oOcC][0-9]{3}$": {
                    "properties": {
                      "ipmi_address": {
                         "description": "IPMI address of the host",
                         "type": "string",
                         "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                      },
                      "ipmi_gateway": {
                         "description": "IPMI gateway of the host",
                         "type": "string",
                         "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                      },
                      "host_profile": {
                         "description": "Host profile of the host",
                         "type": "string",
                         "pattern": "^([a-zA-Z]+)$"
                      }
                    },
                    "required": [
                        "ipmi_address",
                        "ipmi_gateway",
                        "host_profile"
                    ]
                }
            }
        },
        "private_network": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "properties": {
                        "subnet": {
                             "description": "Subnet data of a particular network",
                             "type": "array",
                             "items": {
                                 "type": "string",
                                 "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(3[0-2]|[1-2][0-9]|[0-9]))$"
                             }
                         },
                        "vlan": {
                            "description": "Vlan id of the network",
                            "type": "string",
                            "pattern": "^[vV][lL][aA][nN][ -][0-9]{2,4}$"
                        },
                        "is_common": {
                            "description": "Subnet is common for racks",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "is_common",
                        "subnet",
                        "vlan"
                    ]
                }
            }
        },
        "public_network": {
            "type": "object",
            "properties": {
                "oam": {
                    "type": "object",
                    "properties": {
                        "ip": {
                            "description": "OAM CIDR of the node",
                            "type": "string",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(3[0-2]|[1-2][0-9]|[0-9]))$"
                        },
                        "vlan": {
                            "description": "Vlan id of the network",
                            "type": "string",
                            "pattern": "^[vV][lL][aA][nN][ -][0-9]{2,4}$"
                        }
                    },
                    "required": [
                        "ip",
                        "vlan"
                    ]
                },
                "ingress": {
                    "description": "Ingress CIDR",
                    "type": "string",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(3[0-2]|[1-2][0-9]|[0-9]))$"
                },
                "oob": {
                    "type": "object",
                    "properties": {
                        "subnets": {
                            "description": "Subnet data for oob network",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(3[0-2]|[1-2][0-9]|[0-9]))$"
                            }
                        }
                    },
                    "required": [
                        "subnets"
                    ]
                }
            }
        },
        "dns_ntp_ldap": {
            "type": "object",
            "properties": {
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "pattern": "^ *\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b \\(ntp[0-9]\\.ffdc\\.att\\.com\\)$"
                    }
                },
                "ntp": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "pattern": "(^ *\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b)$|(^ *\\(ns[0-9]\\.(ffdc|kcdc)\\.(sbc|att)\\.com\\)$)"
                    }
                },
                "domain": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]{3}[0-9]{2}.cci.att.com$"
                },
                "ldap": {
                    "type": "object",
                    "properties": {
                        "subdomain": {
                            "type": "string",
                            "pattern": "^testitservices$"
                        },
                        "common_name": {
                            "type": "string",
                            "pattern": "^AP-AIC-[a-zA-Z]{3}[0-9]{2}$"
                        },
                        "url": {
                            "type": "string",
                            "pattern": "^url: ldap://its-ad-ldap.atttest.com$"
                        }
                    }
                }
            },
            "required": [
                "dns",
                "ntp",
                "domain",
                "ldap"
            ]
        },
        "location_data": {
            "type": "object",
            "properties": {
                "corridor": {
                    "type": "string",
                    "pattern": "^[Cc][Oo][Rr][Rr][Ii][Dd][Oo][Rr] [0-9]$"
                },
                "name": {
                    "type": "string",
                    "pattern": "^[A-Za-z ]+$"
                },
                "state": {
                    "type": "string",
                    "pattern": "^[A-Za-z ]+$"
                },
                "country": {
                    "type": "string",
                    "pattern": "^[A-Za-z ]+$"
                },
                "physical_location_id": {
                    "type": "string",
                    "pattern": "^[A-Za-z ]+[0-9]+$"
                }
            },
            "required": [
                "corridor",
                "name",
                "state",
                "country",
                "physical_location_id"
            ]
        }
    }
}
