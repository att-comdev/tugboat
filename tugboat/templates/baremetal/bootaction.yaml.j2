---
schema: 'drydock/BootAction/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: promjoin
  storagePolicy: 'cleartext'
  layeringDefinition:
    abstract: false
    layer: site
  labels:
    application: 'drydock'
data:
  signaling: false
  node_filter:
    filter_set_type: 'union'
    filter_set:
      - filter_type: 'union'
        node_names:
{% for host in data['hosts'] %}
          - '{{ host }}'
{% endfor %}
  # TODO(alanmeadows) move what is global about this document - everything except nodenames to global
  assets:
    - path: /opt/promjoin.sh
      type: file
      permissions: '555'
      # TODO(alanmeadows) You must replace the ip= parameter below with the appropriate MaaS network name of the network
      # you should use to contact kubernetes in the case below, this is cab24_mgmt
{% raw %}
      location: promenade+http://promenade-api.ucp.svc.cluster.local/api/v1.0/join-scripts?design_ref={{ action.design_ref | urlencode }}&hostname={{ node.hostname }}{% if 'oam' in node.network %}&ip={{ node.network.oam.ip }}{% endif %}{% for k, v in node.labels.items() %}&labels.dynamic={{ k }}={{ v }}{% endfor %}
{% endraw %}
      location_pipeline:
        - template
      data_pipeline:
        - utf8_decode
    - path: /lib/systemd/system/promjoin.service
      type: unit
      permissions: '600'
      data: |-
        [Unit]
        Description=Promenade Initialization Service
        After=network-online.target local-fs.target cloud-final.service
        ConditionPathExists=!/var/lib/prom.done

        [Service]
        Type=simple
        ExecStart=/opt/promjoin.sh

        [Install]
        WantedBy=multi-user.target
      data_pipeline:
        - utf8_decode
---
schema: 'drydock/BootAction/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: calico-ip-rules
  storagePolicy: 'cleartext'
  layeringDefinition:
    abstract: false
    layer: site
  labels:
    application: 'drydock'
  substitutions:
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .calico.ip_rule.gateway
      dest:
        path: .assets[0].data
        pattern: DH_SUB_GATEWAY_IP
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .kubernetes.pod_cidr
      dest:
        path: .assets[0].data
        pattern: DH_SUB_POD_CIDR
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .calico.bgp.ipv4.public_service_cidr
      dest:
        path: .assets[0].data
        pattern: DH_SUB_INGRESS_CIDR
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .calico.ip_rule.overlap_cidr
      dest:
        path: .assets[0].data
        pattern: DH_SUB_OVERLAP_CIDR
    - src:
        schema: pegleg/Script/v1
        name: configure-ip-rules
        path: .
      dest:
        path: .assets[1].data
data:
  signaling: false
  assets:
    - path: /etc/systemd/system/configure-ip-rules.service
      type: unit
      permissions: '444'
      data: |-
        [Unit]
        Description=IP Rules Initialization Service
        After=network-online.target local-fs.target

        [Service]
        Type=simple
        ExecStart=/opt/configure-ip-rules.sh -g DH_SUB_GATEWAY_IP -c DH_SUB_POD_CIDR -s DH_SUB_INGRESS_CIDR -o DH_SUB_OVERLAP_CIDR

        [Install]
        WantedBy=multi-user.target
      data_pipeline:
        - utf8_decode
    - path: /opt/configure-ip-rules.sh
      type: file
      permissions: '700'
      data_pipeline:
        - utf8_decode
...
---
schema: 'drydock/BootAction/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: i40evf_blacklist
  storagePolicy: 'cleartext'
  layeringDefinition:
    abstract: false
    layer: site
  labels:
    application: 'drydock'
data:
  signaling: false
  assets:
    - path: /etc/modprobe.d/sriov_blacklist.conf
      type: file
      permissions: '644'
      data_pipeline:
        - utf8_decode
      data: |
        blacklist i40evf
...
