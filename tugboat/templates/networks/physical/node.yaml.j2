---
schema: 'drydock/NetworkLink/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: {{rack_key}}_oob
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
  - src:
      schema: pegleg/NetworkSettings/v1
      name: network-settings
      path: .mtu.oob
    dest:
      path: .mtu
data:
  labels:
    noconfig: enabled
  bonding:
    mode: disabled
  linkspeed: auto
  trunking:
    mode: disabled
    default_network: oob
  allowed_networks:
    - oob
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: oob
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
  - src:
      schema: pegleg/NetworkSettings/v1
      name: network-settings
      path: .mtu.oob
    dest:
      path: .mtu
data:
  cidr: {{ data['network']['common']['oob']['nw'] }}
  routes:
    - subnet: '0.0.0.0/0'
      gateway: {{ data['network']['common']['oob']['gw'] }}
      metric: 100
  ranges:
    - type: static
      start: {{ data['network']['common']['oob']['static_start'] }}
      end: {{ data['network']['common']['oob']['static_end'] }}
...

---
schema: 'drydock/NetworkLink/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: pxe
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
  - src:
      schema: pegleg/NetworkSettings/v1
      name: network-settings
      path: .mtu.pxe
    dest:
      path: .mtu
data:
  bonding:
    mode: disabled
  linkspeed: auto
  trunking:
    mode: disabled
    default_network: pxe
  allowed_networks:
    - pxe
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: pxe
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
  - src:
      schema: pegleg/NetworkSettings/v1
      name: network-settings
      path: .mtu.pxe
    dest:
      path: .mtu
data:
  cidr: {{ data['network']['common']['pxe']['nw'] }}
  routes:
{% for other_subnet in data['network']['common']['pxe']['routes'] %}
    - subnet: {{ other_subnet }}
      gateway: {{ data['network']['common']['pxe']['gw'] }}
      metric: 100
{% endfor %}
  ranges:
    - type: reserved
      start: {{ data['network']['common']['pxe']['reserved_start'] }}
      end: {{ data['network']['common']['pxe']['reserved_end'] }}
    - type: static
      start: {{ data['network']['common']['pxe']['static_start'] }}
      end: {{ data['network']['common']['pxe']['static_end'] }}
    - type: dhcp
      start: {{ data['network']['common']['pxe']['dhcp_start'] }}
      end: {{ data['network']['common']['pxe']['dhcp_end'] }}
...

---
schema: 'drydock/NetworkLink/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: {{ data['region_name'] }}
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
    - src:
       schema: pegleg/NetworkSettings/v1
       name: network-settings
       path: .mtu.primary_bond
      dest:
        path: .mtu
data:
  bonding:
    mode: 802.3ad
    hash: layer3+4
    peer_rate: fast
    mon_rate: 100
    up_delay: 1000
    down_delay: 3000
  mtu: 9100
  linkspeed: auto
  trunking:
    mode: 802.1q
  allowed_networks:
    - oam
    - storage
    - overlay
    - calico
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: oam
  layeringDefinition:
    abstract: false
    layer: 'site'
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/NetworkSettings/v1
        name: network-settings
        path: .mtu.oam
      dest:
        path: .mtu
    # The DNS domain in common-addresses will be applied to all
    # deployed nodes. If you use anything but OAM as your primary
    # interface on a node, you should move this substitution to
    # that drydock/Network/v1 document
    - src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .dns.node_domain
      dest:
        path: .dns.domain
data:
  vlan: {{ data['network']['common']['oam']['vlan'] }}
  cidr: {{ data['network']['common']['oam']['nw'] }}
{% set flag = [0] %}
{% for route in data['network']['common']['oam']['routes'] %}
{% if flag[0] == 0 %}
  routes:
{% endif %}
{% if flag.append(flag.pop() + 1) %} {% endif %}
    - subnet: {{ route }}
      gateway: {{ data['network']['common']['oam']['gw'] }}
      metric: 100
{% endfor %}
{% if flag[0] == 0 %}
  routes:[]
{% endif %}
  ranges:
    - type: reserved
      start: {{ data['network']['common']['oam']['reserved_start'] }}
      end: {{ data['network']['common']['oam']['reserved_end'] }}
    - type: static
      start: {{ data['network']['common']['oam']['static_start'] }}
      end: {{ data['network']['common']['oam']['static_end'] }}
  dns:
    servers: {{ data['network']['dns']['servers'] }}
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: storage
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/NetworkSettings/v1
        name: network-settings
        path: .mtu.storage
      dest:
        path: .mtu
data:
  vlan: {{ data['network']['common']['storage']['vlan'] }}
  cidr: {{ data['network']['common']['storage']['nw'] }}
{% set flag = [0] %}
{% for route in data['network']['common']['storage']['routes'] %}
{% if flag[0] == 0 %}
  routes:
{% endif %}
{% if flag.append(flag.pop() + 1) %} {% endif %}
    - subnet: {{ route }}
      gateway: {{ data['network']['common']['storage']['gw'] }}
      metric: 100
{% endfor %}
{% if flag[0] == 0 %}
  routes:[]
{% endif %}
  ranges:
    - type: reserved
      start: {{ data['network']['common']['storage']['reserved_start'] }}
      end: {{ data['network']['common']['storage']['reserved_end'] }}
    - type: static
      start: {{ data['network']['common']['storage']['static_start'] }}
      end: {{ data['network']['common']['storage']['static_end'] }}
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: overlay
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/NetworkSettings/v1
        name: network-settings
        path: .mtu.overlay
      dest:
        path: .mtu
data:
  vlan: {{ data['network']['common']['overlay']['vlan'] }}
  cidr: {{ data['network']['common']['overlay']['nw'] }}
{% set flag = [0] %}
{% for route in data['network']['common']['overlay']['routes'] %}
{% if flag[0] == 0 %}
  routes:
{% endif %}
{% if flag.append(flag.pop() + 1) %} {% endif %}
    - subnet: {{ route }}
      gateway: {{ data['network']['common']['overlay']['gw'] }}
      metric: 100
{% endfor %}
{% if flag[0] == 0 %}
  routes:[]
{% endif %}
  ranges:
    - type: reserved
      start: {{ data['network']['common']['overlay']['reserved_start'] }}
      end: {{ data['network']['common']['overlay']['reserved_end'] }}
    - type: static
      start: {{ data['network']['common']['overlay']['static_start'] }}
      end: {{ data['network']['common']['overlay']['static_end'] }}
...

---
schema: 'drydock/Network/v1'
metadata:
  schema: 'metadata/Document/v1'
  name: calico
  layeringDefinition:
    abstract: false
    layer: site
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/NetworkSettings/v1
        name: network-settings
        path: .mtu.kubernetes
      dest:
        path: .mtu
data:
  vlan: {{ data['network']['common']['calico']['vlan'] }}
  cidr: {{ data['network']['common']['calico']['nw'] }}
{% set flag = [0] %}
{% for route in data['network']['common']['calico']['routes'] %}
{% if flag[0] == 0 %}
  routes:
{% endif %}
{% if flag.append(flag.pop() + 1) %} {% endif %}
    - subnet: {{ route }}
      gateway: {{ data['network']['common']['calico']['gw'] }}
      metric: 100
{% endfor %}
{% if flag[0] == 0 %}
  routes:[]
{% endif %}
  ranges:
    - type: reserved
      start: {{ data['network']['common']['calico']['reserved_start'] }}
      end: {{ data['network']['common']['calico']['reserved_end'] }}
    - type: static
      start: {{ data['network']['common']['calico']['static_start'] }}
      end: {{ data['network']['common']['calico']['static_end'] }}
...

